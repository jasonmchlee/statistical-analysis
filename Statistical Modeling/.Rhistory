mean(1:5)
help.start()
?anova
??anova
hist(sample(c(1,2,3,4,5,6),100000, replace = TRUE))
hist(sample(c(0,1),50000,replace=T))
hist(sample(c(0,1),50000,replace=T))
#trains in bart
hist(rexp(200, rate = 0.1)
hist(rexp(200, rate = 0.1),breaks=seq(from=0,to=50,by=2))
#trains in bart
hist(rexp(200, rate = 0.1),breaks=seq(from=0,to=200,by=2))
hist(rexp(200, rate = 1.5),breaks=seq(from=0,to=200,by=2))
exp(-1.5*5)
1-exp(-1.5*5)
matrix <- (c(10,52,28,35,0,11,19,40,26,12,9,7,6,5,16,15,10,99,87,81,19,22,33,91,200), nrow = 5, ncol=5)
sample_matrix <- matrix(c(10,52,28,35,0,11,19,40,26,12,9,7,6,5,16,15,10,99,87,81,19,22,33,91,200), nrow = 5, ncol=5)
sample_matrix
<- matrix(c(1,4,7,2,5,8,3,6,8), nrow=3, ncol=3)
sample_matrix_2
sample_matrix_2 <- matrix(c(1,4,7,2,5,8,3,6,8), nrow=3, ncol=3)
sample_matrix_2
sample_matrix_2 <- matrix(c(1,4,7,2,5,8,3,6,8,9), nrow=3, ncol=3)
sample_matrix_2
sample_matrix_2 <- matrix(c(1,4,7,2,5,8,3,6,9), nrow=3, ncol=3)
sample_matrix_2
t(sample_matrix)
sample_matrix[:5]
sample_matrix[0:5]
sample_matrix[1:5]
sample_matrix[1:5,]
studentfunction <- function(matrix_input) {
t(matrix_input)
matrix_input[1:5,]
}
studentfunction(sample_matrix)
studentfunction(sample_matrix)
studentfunction(sample_matrix_2)
studentfunction(sample_matrix_2)
print(sample_matrix)
sample_matrix_2 <- matrix(c(1,4,7,2,5,8,3,6,9), nrow=3, ncol=3)
sample_matrix_2
studentfunction(sample_matrix)
sample_matrix <- matrix(c(10,52,28,35,0,11,19,40,26,12,9,7,6,5,16,15,10,99,87,81,19,22,33,91,200), nrow = 5, ncol=5)
print(sample_matrix)
studentfunction(sample_matrix)
sample_matrix <- matrix(c(10,52,28,35,0,11,19,40,26,12,9,7,6,5,16,15,10,99,87,81,19,22,33,91,200), nrow = 5, ncol=5)
print(sample_matrix)
# test function on both matrix
studentfunction(sample_matrix)
sample_matrix <- matrix(c(10,52,28,35,0,11,19,40,26,12,9,7,6,5,16,15,10,99,87,81,19,22,33,91,200), nrow = 5, ncol=5)
studentfunction <- function(matrix_input) {
t(matrix_input)
matrix_input[1:5,]
}
studentfunction(sample_matrix)
t(sample_matrix)
studentfunction <- function(matrix_input) {
t(matrix_input)
#matrix_input[1:5,]
}
studentfunction(sample_matrix)
t(sample_matrix_2)
studentfunction <- function(matrix_input) {
t(matrix_input)
matrix_input[1:5,]
}
#7a Matrix from Execrise 7, Chapter 2
sample_matrix <- matrix(c(10,52,28,35,0,11,19,40,26,12,9,7,6,5,16,15,10,99,87,81,19,22,33,91,200), nrow = 5, ncol=5)
#####################
# 7b Matrix from Chapter 2.1
sample_matrix_2 <- matrix(c(1,4,7,2,5,8,3,6,9), nrow=3, ncol=3)
####################
# test function on both matrix
studentfunction(sample_matrix)
studentfunction(sample_matrix_2)
sample_matrix_test <- matrix(c(10,4,6,78,32,45,52,28,35,0,11,19,40,26,12,9,7,6,5,16,15,10,99,87,81,19,22,33,91,200), nrow = 6, ncol=5)
sample_matrix_test <- matrix(c(10,4,6,78,32,45,52,28,35,0,11,19,40,26,12,9,7,6,5,16,15,10,99,87,81,19,22,33,91,200), nrow = 6, ncol=5)
sample_matrix_test
sample_matrix_test <- matrix(c(10,4,6,78,32,45,52,28,35,0,11,19,40,26,12,9,7,6,5,16,15,10,99,87,81,19,22,33,91,200), nrow = 6, ncol=5)
studentfunction(sample_matrix_test)
studentfunction <- function(matrix_input) {
t(matrix_input)
matrix_input[1:5,]
}
sample_matrix_test <- matrix(c(10,4,6,78,32,45,52,28,35,0,11,19,40,26,12,9,7,6,5,16,15,10,99,87,81,19,22,33,91,200), nrow = 6, ncol=5)
studentfunction(sample_matrix_test)
diag(sample_matrix,5,5)
diag(sample_matrix)
sample_matrix <- matrix(c(10,52,28,35,0,11,19,40,26,12,9,7,6,5,16,15,10,99,87,81,19,22,33,91,200), nrow = 5, ncol=5)
sample_matrix
mean(c(1,2,3,4,5))
dian(c(1,2,3,4,5))
median(c(1,2,3,4,5))
diag_matrix <- diag(sample_matrix)
mean_diag_matrix <- mean(diag_matrix)
diag_matrix <- diag(sample_matrix)
mean_diag_matrix <- mean(diag_matrix)
return mean_diag_matrix
diag_matrix <- diag(sample_matrix)
mean_diag_matrix <- mean(diag_matrix)
print(mean_diag_matrix)
median_diag_matrix <- median(diag_matrix)
print(median_diag_matrix)
diag_matrix
diag_matrix <- diag(sample_matrix)
diag_matrix
transformmatrix <- function(matrix_input) {
diag_matrix <- diag(sample_matrix)
mean_diag_matrix <- mean(diag_matrix)
print(mean_diag_matrix)
median_diag_matrix <- median(diag_matrix)
print(median_diag_matrix)
}
transformmatrix(sample_matrix)
transformmatrix <- function(matrix_input) {
diag_matrix <- diag(sample_matrix)
mean_diag_matrix <- mean(diag_matrix)
print(mean_diag_matrix)
median_diag_matrix <- median(diag_matrix)
print(median_diag_matrix)
}
transformmatrix(sample_matrix_2)
sample_matrix_2 <- matrix(c(1,4,7,2,5,8,3,6,9), nrow=3, ncol=3)
transformmatrix <- function(matrix_input) {
diag_matrix <- diag(sample_matrix)
mean_diag_matrix <- mean(diag_matrix)
print(mean_diag_matrix)
median_diag_matrix <- median(diag_matrix)
print(median_diag_matrix)
}
transformmatrix(sample_matrix_2)
transformmatrix <- function(matrix_input) {
diag_matrix <- diag(matrix_input)
mean_diag_matrix <- mean(diag_matrix)
print(mean_diag_matrix)
median_diag_matrix <- median(diag_matrix)
print(median_diag_matrix)
}
transformmatrix(sample_matrix_2)
transformmatrix <- function(matrix_input) {
diag_matrix <- diag(matrix_input)
mean_diag_matrix <- mean(diag_matrix)
print(mean_diag_matrix)
median_diag_matrix <- median(diag_matrix)
print(median_diag_matrix)
}
transformmatrix(sample_matrix_1)
sample_matrix_1 <- matrix(c(10,52,28,35,0,11,19,40,26,12,9,7,6,5,16,15,10,99,87,81,19,22,33,91,200), nrow = 5, ncol=5)
#####################
# 7b Matrix from Chapter 2.1
sample_matrix_2 <- matrix(c(1,4,7,2,5,8,3,6,9), nrow=3, ncol=3)
####################
# test function on both matrix
studentfunction(sample_matrix_1)
studentfunction(sample_matrix_2)
##########################################################
transformmatrix <- function(matrix_input) {
diag_matrix <- diag(matrix_input)
mean_diag_matrix <- mean(diag_matrix)
print(mean_diag_matrix)
median_diag_matrix <- median(diag_matrix)
print(median_diag_matrix)
}
transformmatrix(sample_matrix_1)
sample_matrix_2 <- matrix(c(1,4,7,2,5,8,3,6,9), nrow=3, ncol=3)
####################
# test function on both matrix
studentfunction(sample_matrix_1)
studentfunction(sample_matrix_2)
##########################################################
transformmatrix <- function(matrix_input) {
diag_matrix <- diag(matrix_input)
mean_diag_matrix <- mean(diag_matrix)
print(mean_diag_matrix)
median_diag_matrix <- median(diag_matrix)
print(median_diag_matrix)
}
transformmatrix(sample_matrix_2)
iris
for (x in 1:nrow(iris)) {
if(iris$Species[x] =="setosa") {iris$Species[x] <- "1"}
else if (iris$Species[x] =="versicolor") {iris$Species[x] <- "2"}
else{iris$Species[x] <- "3"}
}
iris
for (x in 1:nrow(iris)) {
if(iris$Species[x] =="setosa") {iris$Species[x] <- "1"}
else if (iris$Species[x] =="versicolor") {iris$Species[x] <- "2"}
else{iris$Species[x] <- "3"}
as.numeric(iris$Species)
}
iris
iris
iris
iris
iris
for (x in 1:nrow(iris)) {
if(iris$Species[x] =="setosa") {iris$Species[x] <- "1"}
else if (iris$Species[x] =="versicolor") {iris$Species[x] <- "2"}
else{iris$Species[x] <- "3"}
}
View(iris)
for (x in 1:nrow(iris)) {
if(iris$Species[x] ==setosa) {iris$Species[x] <- "1"}
else if (iris$Species[x] ==versicolor) {iris$Species[x] <- "2"}
else{iris$Species[x] <- "3"}
}
iris
for (x in 1:nrow(iris)) {
if(iris$Species[x] =="setosa") {iris$Species[x] <- gsub("setosa","1", iris$Species)}
else if (iris$Species[x] =="versicolor") {iris$Species[x] <- gsub("versicolor","2", iris$Species)}
else{iris$Species[x] <- "3"}
}
iris
iris
iris
iris
iris
View(iris)
View(iris)
iris
for (x in 1:nrow(iris)){
iris$Species <- gsub("setosa","1",iris$Species)
iris$Species <- gsub("virginica", "2", iris$Species)
iris$Species <- gsub("versicolor", "3",iris$Species)
iris$Species <- as.numeric(iris$Species)
}
iris
iris
iris$Group <- c()
for (x in 1:nrow(iris)) {
if(iris$Species[x] == "Setosa"| "Versicolor") {
iris$Group[x] <- "0"
} else {
iris$Group[x] <- "1"}
}
iris
iris$Group <- c()
for (x in 1:nrow(iris)) {
if(iris$Species[x] == "Setosa"| "Versicolor") {
iris$Group[x] <- "0"
} else {
iris$Group[x] <- "1"}
}
iris$Group <- c()
for (x in 1:nrow(iris)) {
if(iris$Species[x] == "Setosa") {
iris$Group[x] <- "0"
} else if(iris$Species[x] == "Versicolor") {
iris$Group[x] <- "0"
}
else{
iris$Group[x] <- "1"}
}
iris
iris$Group <- c()
for (x in 1:nrow(iris)) {
if(iris$Species[x] == "setosa") {
iris$Group[x] <- "0"
} else if(iris$Species[x] == "versicolor") {
iris$Group[x] <- "0"
}
else{
iris$Group[x] <- "1"}
}
iris
print(head(iris))
install.packages("ISLR")
library("ISLR")
summary(iris)
glm.fit <- glm(Direction ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, data = iris, family = binomial)
library(caret)
library("caret")
install.packages("caret")
library("caret")
library("ggplot2")
library("lattice")
library("caret")
glm.fit <- glm(Direction ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, data = iris, family = binomial)
glm.fit <- glm(formula = Direction ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, data = iris, family = binomial)
install.packages("statisticalModeling")
install.packages("C:/Users/jason/Dropbox/Work/Coding Notes/R projects/Statistical Modeling/statisticalModeling_0.3.0.tar.gz", repos = NULL, type = "source")
install.packages("mosaicdata")
install.packages("mosaicData")
```{r}
plot(cars)
header: Modeling running times
In this exercise, I'll build three different models based on the data Runners. The data come from records of the Cherry Blossom Ten Mile Run, a foot race held in Washington, DC each spring.
setwd("C:/Users/jason/Dropbox/Work/Coding Notes/R projects/Statistical Modeling")
```{r}
library(mosaicData)
```
I will construct three different models using the linear model architecture. Each will have the "net" running time as a response and age and/or sex as explanatory variables.
---
```{r}
library(mosaicData)
```
library(mosaicData)
library(statisticalModeling)
install.packages("C:/Users/jason/Dropbox/Work/Coding Notes/R projects/Statistical Modeling/statisticalModeling_0.3.0.tar.gz", repos = NULL, type = "source")
install.packages("mosaic")
install.packages("C:/Users/jason/Dropbox/Work/Coding Notes/R projects/Statistical Modeling/statisticalModeling_0.3.0.tar.gz", repos = NULL, type = "source")
library(mosaicData)
library(statisticalModeling)
library(mosaicData)
library(statisticalModeling)
library(ggplot2)
library(dplyr)
library(rpart)
library(purrr)
#load dataset
runners <- read.csv("Runners100.csv")
# Find the variable names in Runners
names(runners)
handicap_model_1 <- lm(net ~ age, data = runners)
handicap_model_2 <- lm(net ~ sex, data = runners)
handicap_model_3 <- lm(net ~ age+sex, data = runners)
fmodel(handicap_model_1)
fmodel(handicap_model_2)
fmodel(handicap_model_3)
